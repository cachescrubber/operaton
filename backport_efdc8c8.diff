Subject: [PATCH] feat(core): expose process def key in process instance API (#4847)
---
Index: engine-rest/engine-rest-openapi/src/main/templates/models/org/operaton/bpm/engine/rest/dto/runtime/ProcessInstanceDto.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest-openapi/src/main/templates/models/org/operaton/bpm/engine/rest/dto/runtime/ProcessInstanceDto.ftl b/engine-rest/engine-rest-openapi/src/main/templates/models/org/operaton/bpm/engine/rest/dto/runtime/ProcessInstanceDto.ftl
--- a/engine-rest/engine-rest-openapi/src/main/templates/models/org/operaton/bpm/engine/rest/dto/runtime/ProcessInstanceDto.ftl	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest-openapi/src/main/templates/models/org/operaton/bpm/engine/rest/dto/runtime/ProcessInstanceDto.ftl	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -12,6 +12,11 @@
         type = "string"
         desc = "The id of the process definition that this process instance belongs to." />

+    <@lib.property
+        name = "definitionKey"
+        type = "string"
+        desc = "The key of the process definition that this process instance belongs to." />
+
     <@lib.property
         name = "businessKey"
         type = "string"
@@ -40,4 +45,4 @@
         desc = "The tenant id of the process instance." />

 </@lib.dto>
-</#macro>
\ No newline at end of file
+</#macro>
Index: engine-rest/engine-rest-openapi/src/main/templates/paths/condition/post.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest-openapi/src/main/templates/paths/condition/post.ftl b/engine-rest/engine-rest-openapi/src/main/templates/paths/condition/post.ftl
--- a/engine-rest/engine-rest-openapi/src/main/templates/paths/condition/post.ftl	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest-openapi/src/main/templates/paths/condition/post.ftl	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -39,6 +39,7 @@
                           "links": [],
                           "id": "aProcInstId",
                           "definitionId": "aProcDefId",
+                          "definitionKey": "aProcDefKey",
                           "businessKey": "aBusinessKey",
                           "caseInstanceId": null,
                           "ended": false,
@@ -49,6 +50,7 @@
                           "links": [],
                           "id": "anotherId",
                           "definitionId": "aProcDefId",
+                          "definitionKey": "aProcDefKey",
                           "businessKey": "aBusinessKey",
                           "caseInstanceId": null,
                           "ended": false,
@@ -71,4 +73,4 @@
   }
 }

-</#macro>
\ No newline at end of file
+</#macro>
Index: engine-rest/engine-rest-openapi/src/main/templates/paths/message/post.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest-openapi/src/main/templates/paths/message/post.ftl b/engine-rest/engine-rest-openapi/src/main/templates/paths/message/post.ftl
--- a/engine-rest/engine-rest-openapi/src/main/templates/paths/message/post.ftl	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest-openapi/src/main/templates/paths/message/post.ftl	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -89,6 +89,7 @@
                            "links": [],
                              "id": "aProcInstId",
                              "definitionId": "aProcDefId",
+                             "definitionKey": "aProcDefKey",
                              "businessKey": "aKey",
                              "caseInstanceId": "aCaseInstId",
                              "ended": false,
@@ -137,4 +138,4 @@
   }
 }

-</#macro>
\ No newline at end of file
+</#macro>
Index: engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/start/post.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/start/post.ftl b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/start/post.ftl
--- a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/start/post.ftl	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/start/post.ftl	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -114,6 +114,7 @@
                          ],
                          "id":"anId",
                          "definitionId":"aProcessDefinitionId",
+                         "definitionKey":"aProcessDefinitionKey",
                          "businessKey":"myBusinessKey",
                          "caseInstanceId": null,
                          "tenantId":null,
@@ -134,6 +135,7 @@
                          ],
                          "id": "aProcInstId",
                          "definitionId": "aProcessDefinitionId",
+                         "definitionKey":"aProcessDefinitionKey",
                          "businessKey": "myBusinessKey",
                          "caseInstanceId": null,
                          "ended": false,
@@ -168,6 +170,7 @@
                          ],
                          "id":"anId",
                          "definitionId":"aProcessDefinitionId",
+                         "definitionKey":"aProcessDefinitionKey",
                          "businessKey":"myBusinessKey",
                          "caseInstanceId": null,
                          "tenantId":null,
@@ -196,4 +199,4 @@
   }
 }

-</#macro>
\ No newline at end of file
+</#macro>
Index: engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/submit-form/post.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/submit-form/post.ftl b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/submit-form/post.ftl
--- a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/submit-form/post.ftl	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/submit-form/post.ftl	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -62,6 +62,7 @@
                          ],
                          "id":"anId",
                          "definitionId":"aProcessDefinitionId",
+                         "definitionKey":"aProcessDefinitionKey",
                          "businessKey":"myBusinessKey",
                          "caseInstanceId": null,
                          "tenantId":null,
@@ -99,4 +100,4 @@
   }
 }

-</#macro>
\ No newline at end of file
+</#macro>
Index: engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant-id/{tenant-id}/start/post.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant-id/{tenant-id}/start/post.ftl b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant-id/{tenant-id}/start/post.ftl
--- a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant-id/{tenant-id}/start/post.ftl	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant-id/{tenant-id}/start/post.ftl	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -120,6 +120,7 @@
                          ],
                          "id":"anId",
                          "definitionId":"aProcessDefinitionId",
+                         "definitionKey":"aProcessDefinitionKey",
                          "businessKey":"myBusinessKey",
                          "caseInstanceId": null,
                          "tenantId":null,
@@ -140,6 +141,7 @@
                          ],
                          "id": "aProcInstId",
                          "definitionId": "aProcessDefinitionId",
+                         "definitionKey":"aProcessDefinitionKey",
                          "businessKey": "myBusinessKey",
                          "caseInstanceId": null,
                          "ended": false,
@@ -174,6 +176,7 @@
                          ],
                          "id":"anId",
                          "definitionId":"aProcessDefinitionId",
+                         "definitionKey":"aProcessDefinitionKey",
                          "businessKey":"myBusinessKey",
                          "caseInstanceId": null,
                          "tenantId":null,
@@ -202,4 +205,4 @@
   }
 }

-</#macro>
\ No newline at end of file
+</#macro>
Index: engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant-id/{tenant-id}/submit-form/post.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant-id/{tenant-id}/submit-form/post.ftl b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant-id/{tenant-id}/submit-form/post.ftl
--- a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant-id/{tenant-id}/submit-form/post.ftl	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/key/{key}/tenant-id/{tenant-id}/submit-form/post.ftl	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -69,6 +69,7 @@
                          ],
                          "id":"anId",
                          "definitionId":"aProcessDefinitionId",
+                         "definitionKey":"aProcessDefinitionKey",
                          "businessKey":"myBusinessKey",
                          "caseInstanceId": null,
                          "tenantId":null,
@@ -106,4 +107,4 @@
   }
 }

-</#macro>
\ No newline at end of file
+</#macro>
Index: engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/start/post.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/start/post.ftl b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/start/post.ftl
--- a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/start/post.ftl	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/start/post.ftl	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -113,6 +113,7 @@
                          ],
                          "id":"anId",
                          "definitionId":"aProcessDefinitionId",
+                         "definitionKey":"aProcessDefinitionKey",
                          "businessKey":"myBusinessKey",
                          "caseInstanceId": null,
                          "tenantId":null,
@@ -133,6 +134,7 @@
                          ],
                          "id": "aProcInstId",
                          "definitionId": "aProcessDefinitionId",
+                         "definitionKey":"aProcessDefinitionKey",
                          "businessKey": "myBusinessKey",
                          "caseInstanceId": null,
                          "ended": false,
@@ -167,6 +169,7 @@
                          ],
                          "id":"anId",
                          "definitionId":"aProcessDefinitionId",
+                         "definitionKey":"aProcessDefinitionKey",
                          "businessKey":"myBusinessKey",
                          "caseInstanceId": null,
                          "tenantId":null,
@@ -195,4 +198,4 @@
   }
 }

-</#macro>
\ No newline at end of file
+</#macro>
Index: engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/submit-form/post.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/submit-form/post.ftl b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/submit-form/post.ftl
--- a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/submit-form/post.ftl	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-definition/{id}/submit-form/post.ftl	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -61,6 +61,7 @@
                          ],
                          "id":"anId",
                          "definitionId":"aProcessDefinitionId",
+                         "definitionKey":"aProcessDefinitionKey",
                          "businessKey":"myBusinessKey",
                          "caseInstanceId": null,
                          "tenantId":null,
@@ -98,4 +99,4 @@
   }
 }

-</#macro>
\ No newline at end of file
+</#macro>
Index: engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/get.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/get.ftl b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/get.ftl
--- a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/get.ftl	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/get.ftl	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -34,6 +34,7 @@
                            "links": [],
                            "id": "anId",
                            "definitionId": "aProcDefId",
+                           "definitionKey": "aProcDefKey",
                            "businessKey": "aKey",
                            "caseInstanceId": "aCaseInstanceId",
                            "ended": false,
@@ -53,4 +54,4 @@
   }
 }

-</#macro>
\ No newline at end of file
+</#macro>
Index: engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/post.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/post.ftl b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/post.ftl
--- a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/post.ftl	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/post.ftl	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -60,6 +60,7 @@
                            "links": [],
                            "id": "anId",
                            "definitionId": "aProcessDefinitionId",
+                           "definitionKey": "aProcessDefinitionKey",
                            "businessKey": "aKey",
                            "caseInstanceId": "aCaseInstanceId",
                            "ended": false,
@@ -80,4 +81,4 @@
   }
 }

-</#macro>
\ No newline at end of file
+</#macro>
Index: engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/{id}/get.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/{id}/get.ftl b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/{id}/get.ftl
--- a/engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/{id}/get.ftl	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest-openapi/src/main/templates/paths/process-instance/{id}/get.ftl	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -28,6 +28,7 @@
                        "value": {
                          "id":"aProcessInstanceId",
                          "definitionId":"aProcDefId",
+                         "definitionKey":"aProcDefKey",
                          "businessKey":"aKey",
                          "caseInstanceId":"aCaseInstanceId",
                          "ended":false,
@@ -45,4 +46,4 @@

   }
 }
-</#macro>
\ No newline at end of file
+</#macro>
Index: engine-rest/engine-rest/src/main/java/org/operaton/bpm/engine/rest/dto/runtime/ProcessInstanceDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest/src/main/java/org/operaton/bpm/engine/rest/dto/runtime/ProcessInstanceDto.java b/engine-rest/engine-rest/src/main/java/org/operaton/bpm/engine/rest/dto/runtime/ProcessInstanceDto.java
--- a/engine-rest/engine-rest/src/main/java/org/operaton/bpm/engine/rest/dto/runtime/ProcessInstanceDto.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest/src/main/java/org/operaton/bpm/engine/rest/dto/runtime/ProcessInstanceDto.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -28,6 +28,7 @@
   private boolean ended;
   private boolean suspended;
   private String tenantId;
+  private String definitionKey;

   public ProcessInstanceDto() {
   }
@@ -35,6 +36,7 @@
   public ProcessInstanceDto(ProcessInstance instance) {
     this.id = instance.getId();
     this.definitionId = instance.getProcessDefinitionId();
+    this.definitionKey = instance.getProcessDefinitionKey();
     this.businessKey = instance.getBusinessKey();
     this.caseInstanceId = instance.getCaseInstanceId();
     this.ended = instance.isEnded();
@@ -50,6 +52,10 @@
     return definitionId;
   }

+  public String getDefinitionKey() {
+    return definitionKey;
+  }
+
   public String getBusinessKey() {
     return businessKey;
   }
Index: engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/ConditionRestServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/ConditionRestServiceTest.java b/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/ConditionRestServiceTest.java
--- a/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/ConditionRestServiceTest.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/ConditionRestServiceTest.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -276,8 +276,11 @@
   protected void checkResult(String content) {
     Assert.assertEquals(MockProvider.EXAMPLE_PROCESS_INSTANCE_ID, from(content).get("[" + 0 + "].id"));
     Assert.assertEquals(MockProvider.EXAMPLE_PROCESS_DEFINITION_ID, from(content).get("[" + 0+ "].definitionId"));
+    Assert.assertEquals(MockProvider.EXAMPLE_PROCESS_DEFINITION_KEY, from(content).get("[" + 0+ "].definitionKey"));
     Assert.assertEquals(MockProvider.ANOTHER_EXAMPLE_PROCESS_INSTANCE_ID, from(content).get("[" + 1 + "].id"));
     Assert.assertEquals(MockProvider.EXAMPLE_PROCESS_DEFINITION_ID, from(content).get("[" + 1+ "].definitionId"));
+    Assert.assertEquals(MockProvider.EXAMPLE_PROCESS_DEFINITION_KEY, from(content).get("[" + 1+ "].definitionKey"));
+
   }

 }
Index: engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/MessageRestServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/MessageRestServiceTest.java b/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/MessageRestServiceTest.java
--- a/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/MessageRestServiceTest.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/MessageRestServiceTest.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -263,6 +263,7 @@
     //process instance should be filled and execution should be null
     Assert.assertEquals(MockProvider.EXAMPLE_PROCESS_INSTANCE_ID, from(content).get("[" + idx + "].processInstance.id"));
     Assert.assertEquals(MockProvider.EXAMPLE_PROCESS_DEFINITION_ID, from(content).get("[" + idx + "].processInstance.definitionId"));
+    Assert.assertEquals(MockProvider.EXAMPLE_PROCESS_DEFINITION_KEY, from(content).get("[" + idx + "].processInstance.definitionKey"));
     Assert.assertNull(from(content).get("[" + idx + "].execution"));
   }

Index: engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/ProcessInstanceRestServiceInteractionTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/ProcessInstanceRestServiceInteractionTest.java b/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/ProcessInstanceRestServiceInteractionTest.java
--- a/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/ProcessInstanceRestServiceInteractionTest.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/ProcessInstanceRestServiceInteractionTest.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -1424,6 +1424,7 @@
       .body("id", Matchers.equalTo(MockProvider.EXAMPLE_PROCESS_INSTANCE_ID))
       .body("ended", Matchers.equalTo(MockProvider.EXAMPLE_PROCESS_INSTANCE_IS_ENDED))
       .body("definitionId", Matchers.equalTo(MockProvider.EXAMPLE_PROCESS_DEFINITION_ID))
+      .body("definitionKey", Matchers.equalTo(MockProvider.EXAMPLE_PROCESS_DEFINITION_KEY))
       .body("businessKey", Matchers.equalTo(MockProvider.EXAMPLE_PROCESS_INSTANCE_BUSINESS_KEY))
       .body("suspended", Matchers.equalTo(MockProvider.EXAMPLE_PROCESS_INSTANCE_IS_SUSPENDED))
       .body("tenantId", Matchers.equalTo(MockProvider.EXAMPLE_TENANT_ID))
Index: engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/helper/MockProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/helper/MockProvider.java b/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/helper/MockProvider.java
--- a/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/helper/MockProvider.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine-rest/engine-rest/src/test/java/org/operaton/bpm/engine/rest/helper/MockProvider.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -1317,6 +1317,7 @@
     when(mock.getBusinessKey()).thenReturn(EXAMPLE_PROCESS_INSTANCE_BUSINESS_KEY);
     when(mock.getCaseInstanceId()).thenReturn(EXAMPLE_CASE_INSTANCE_ID);
     when(mock.getProcessDefinitionId()).thenReturn(EXAMPLE_PROCESS_DEFINITION_ID);
+    when(mock.getProcessDefinitionKey()).thenReturn(EXAMPLE_PROCESS_DEFINITION_KEY);
     when(mock.getProcessInstanceId()).thenReturn(EXAMPLE_PROCESS_INSTANCE_ID);
     when(mock.isSuspended()).thenReturn(EXAMPLE_PROCESS_INSTANCE_IS_SUSPENDED);
     when(mock.isEnded()).thenReturn(EXAMPLE_PROCESS_INSTANCE_IS_ENDED);
@@ -2341,6 +2342,7 @@
     when(mock.getId()).thenReturn(ANOTHER_EXAMPLE_PROCESS_INSTANCE_ID);
     when(mock.getBusinessKey()).thenReturn(EXAMPLE_PROCESS_INSTANCE_BUSINESS_KEY);
     when(mock.getProcessDefinitionId()).thenReturn(EXAMPLE_PROCESS_DEFINITION_ID);
+    when(mock.getProcessDefinitionKey()).thenReturn(EXAMPLE_PROCESS_DEFINITION_KEY);
     when(mock.getProcessInstanceId()).thenReturn(ANOTHER_EXAMPLE_PROCESS_INSTANCE_ID);
     when(mock.isSuspended()).thenReturn(EXAMPLE_PROCESS_INSTANCE_IS_SUSPENDED);
     when(mock.isEnded()).thenReturn(EXAMPLE_PROCESS_INSTANCE_IS_ENDED);
Index: engine/src/main/java/org/operaton/bpm/engine/impl/persistence/entity/ExecutionEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/java/org/operaton/bpm/engine/impl/persistence/entity/ExecutionEntity.java b/engine/src/main/java/org/operaton/bpm/engine/impl/persistence/entity/ExecutionEntity.java
--- a/engine/src/main/java/org/operaton/bpm/engine/impl/persistence/entity/ExecutionEntity.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/java/org/operaton/bpm/engine/impl/persistence/entity/ExecutionEntity.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -239,6 +239,11 @@
    */
   protected String restartedProcessInstanceId;

+  /**
+   * The name of the process definition key
+   */
+  protected String processDefinitionKey;
+
   /**
    * Contains observers which are observe the execution.
    * @since 7.6
@@ -268,6 +273,7 @@

     // initialize the new execution
     createdExecution.setProcessDefinition(getProcessDefinition());
+    createdExecution.setProcessDefinitionKey(getProcessDefinitionKey());
     createdExecution.setProcessInstance(getProcessInstance());
     createdExecution.setActivity(getActivity());
     createdExecution.setSuspensionState(getSuspensionState());
@@ -525,6 +531,7 @@
     removeEventSubscriptionsExceptCompensation();
   }

+  @Override
   public void removeAllTasks() {
     // delete all the tasks
     removeTasks();
@@ -553,6 +560,7 @@
     removeIncidents();
   }

+  @Override
   public void removeVariablesLocalInternal() {
     for (VariableInstanceEntity variableInstance : variableStore.getVariables()) {
       invokeVariableLifecycleListenersDelete(
@@ -753,6 +761,7 @@
     this.processDefinitionId = processDefinitionId;
   }

+  @Override
   public String getProcessDefinitionId() {
     return processDefinitionId;
   }
@@ -774,9 +783,13 @@
     this.processDefinition = processDefinition;
     if (processDefinition != null) {
       this.processDefinitionId = processDefinition.getId();
+      if (processDefinition instanceof ProcessDefinitionEntity) {
+        this.processDefinitionKey = ((ProcessDefinitionEntity) processDefinition).getKey();
+      }
     }
     else {
       this.processDefinitionId = null;
+      this.processDefinitionKey = null;
     }

   }
@@ -819,6 +832,7 @@
     return parentId == null;
   }

+  @Override
   public boolean isProcessInstanceStarting() {
     // the process instance can only be starting if it is currently in main-memory already
     // we never have to access the database
@@ -1265,6 +1279,7 @@
     return Context.getCommandContext().getVariableInstanceManager().findVariableInstancesByExecutionId(id);
   }

+  @Override
   public Collection<VariableInstanceEntity> provideVariables(Collection<String> variableNames) {
     return Context.getCommandContext().getVariableInstanceManager().findVariableInstancesByExecutionIdAndVariableNames(id, variableNames);
   }
@@ -1430,6 +1445,7 @@

   // persistent state /////////////////////////////////////////////////////////

+  @Override
   public Object getPersistentState() {
     Map<String, Object> persistentState = new HashMap<>();
     persistentState.put("processDefinitionId", this.processDefinitionId);
@@ -1447,6 +1463,7 @@
     persistentState.put("suspensionState", this.suspensionState);
     persistentState.put("cachedEntityState", getCachedEntityState());
     persistentState.put("sequenceCounter", getSequenceCounter());
+    persistentState.put("processDefinitionKey", this.processDefinitionKey);
     return persistentState;
   }

@@ -1454,10 +1471,12 @@
     Context.getCommandContext().getExecutionManager().insertExecution(this);
   }

+  @Override
   public int getRevisionNext() {
     return revision + 1;
   }

+  @Override
   public void forceUpdate() {
     Context.getCommandContext().getDbEntityManager().forceUpdate(this);
   }
@@ -1791,6 +1810,7 @@
     return cachedEntityState;
   }

+  @Override
   public String getRootProcessInstanceId() {
     if (isProcessInstanceExecution()) {
       return rootProcessInstanceId;
@@ -1808,6 +1828,7 @@
     this.rootProcessInstanceId = rootProcessInstanceId;
   }

+  @Override
   public String getProcessInstanceId() {
     return processInstanceId;
   }
@@ -1829,10 +1850,12 @@
     this.parentId = parentId;
   }

+  @Override
   public int getRevision() {
     return revision;
   }

+  @Override
   public void setRevision(int revision) {
     this.revision = revision;
   }
@@ -1887,6 +1910,7 @@
     this.suspensionState = suspensionState;
   }

+  @Override
   public boolean isSuspended() {
     return suspensionState == SuspensionState.SUSPENDED.getStateCode();
   }
@@ -1901,6 +1925,7 @@
     return activityName;
   }

+  @Override
   public FlowElement getBpmnModelElementInstance() {
     BpmnModelInstance bpmnModelInstance = getBpmnModelInstance();
     if (bpmnModelInstance != null) {
@@ -1926,6 +1951,7 @@
     }
   }

+  @Override
   public BpmnModelInstance getBpmnModelInstance() {
     if (processDefinitionId != null) {
       return Context.getProcessEngineConfiguration().getDeploymentCache().findBpmnModelInstanceForProcessDefinition(processDefinitionId);
@@ -1936,6 +1962,7 @@
     }
   }

+  @Override
   public ProcessEngineServices getProcessEngineServices() {
     return Context.getProcessEngineConfiguration().getProcessEngine();
   }
@@ -1948,4 +1975,13 @@
   public String getProcessDefinitionTenantId() {
     return getProcessDefinition().getTenantId();
   }
+
+  public void setProcessDefinitionKey(String processDefinitionKey) {
+    this.processDefinitionKey = processDefinitionKey;
+  }
+
+  @Override
+  public String getProcessDefinitionKey() {
+    return processDefinitionKey;
+  }
 }
Index: engine/src/main/java/org/operaton/bpm/engine/impl/persistence/entity/ProcessInstanceWithVariablesImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/java/org/operaton/bpm/engine/impl/persistence/entity/ProcessInstanceWithVariablesImpl.java b/engine/src/main/java/org/operaton/bpm/engine/impl/persistence/entity/ProcessInstanceWithVariablesImpl.java
--- a/engine/src/main/java/org/operaton/bpm/engine/impl/persistence/entity/ProcessInstanceWithVariablesImpl.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/java/org/operaton/bpm/engine/impl/persistence/entity/ProcessInstanceWithVariablesImpl.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -86,4 +86,9 @@
   public String getTenantId() {
     return executionEntity.getTenantId();
   }
+
+   @Override
+  public String getProcessDefinitionKey() {
+    return executionEntity.getProcessDefinitionKey();
+  }
 }
Index: engine/src/main/java/org/operaton/bpm/engine/runtime/Execution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/java/org/operaton/bpm/engine/runtime/Execution.java b/engine/src/main/java/org/operaton/bpm/engine/runtime/Execution.java
--- a/engine/src/main/java/org/operaton/bpm/engine/runtime/Execution.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/java/org/operaton/bpm/engine/runtime/Execution.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -52,4 +52,9 @@
    */
   String getTenantId();

+  /**
+   * The Key of the process definition.
+   */
+  String getProcessDefinitionKey();
+
 }
Index: engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.db2.create.engine.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.db2.create.engine.sql b/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.db2.create.engine.sql
--- a/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.db2.create.engine.sql	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.db2.create.engine.sql	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -98,6 +98,7 @@
     CACHED_ENT_STATE_ integer,
     SEQUENCE_COUNTER_ bigint,
     TENANT_ID_ varchar(64),
+    PROC_DEF_KEY_ varchar(255),
     primary key (ID_)
 );

@@ -595,4 +596,4 @@

 -- indices for history cleanup: https://jira.operaton.com/browse/CAM-11616
 create index ACT_IDX_AUTH_ROOT_PI on ACT_RU_AUTHORIZATION(ROOT_PROC_INST_ID_);
-create index ACT_IDX_AUTH_RM_TIME on ACT_RU_AUTHORIZATION(REMOVAL_TIME_);
\ No newline at end of file
+create index ACT_IDX_AUTH_RM_TIME on ACT_RU_AUTHORIZATION(REMOVAL_TIME_);
Index: engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.h2.create.engine.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.h2.create.engine.sql b/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.h2.create.engine.sql
--- a/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.h2.create.engine.sql	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.h2.create.engine.sql	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -98,6 +98,7 @@
     CACHED_ENT_STATE_ integer,
     SEQUENCE_COUNTER_ integer,
     TENANT_ID_ varchar(64),
+    PROC_DEF_KEY_ varchar(255),
     primary key (ID_)
 );

@@ -586,4 +587,4 @@

 -- indices for history cleanup: https://jira.operaton.com/browse/CAM-11616
 create index ACT_IDX_AUTH_ROOT_PI on ACT_RU_AUTHORIZATION(ROOT_PROC_INST_ID_);
-create index ACT_IDX_AUTH_RM_TIME on ACT_RU_AUTHORIZATION(REMOVAL_TIME_);
\ No newline at end of file
+create index ACT_IDX_AUTH_RM_TIME on ACT_RU_AUTHORIZATION(REMOVAL_TIME_);
Index: engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mariadb.create.engine.sql
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mariadb.create.engine.sql b/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mariadb.create.engine.sql
--- a/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mariadb.create.engine.sql	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mariadb.create.engine.sql	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -98,6 +98,7 @@
     CACHED_ENT_STATE_ integer,
     SEQUENCE_COUNTER_ bigint,
     TENANT_ID_ varchar(64),
+    PROC_DEF_KEY_ varchar(255),
     primary key (ID_)
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

@@ -587,4 +588,4 @@

 -- indices for history cleanup: https://jira.operaton.com/browse/CAM-11616
 create index ACT_IDX_AUTH_ROOT_PI on ACT_RU_AUTHORIZATION(ROOT_PROC_INST_ID_);
-create index ACT_IDX_AUTH_RM_TIME on ACT_RU_AUTHORIZATION(REMOVAL_TIME_);
\ No newline at end of file
+create index ACT_IDX_AUTH_RM_TIME on ACT_RU_AUTHORIZATION(REMOVAL_TIME_);
Index: engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mssql.create.engine.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mssql.create.engine.sql b/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mssql.create.engine.sql
--- a/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mssql.create.engine.sql	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mssql.create.engine.sql	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -98,6 +98,7 @@
     CACHED_ENT_STATE_ int,
     SEQUENCE_COUNTER_ numeric(19,0),
     TENANT_ID_ nvarchar(64),
+    PROC_DEF_KEY_ nvarchar(255),
     primary key (ID_)
 );

@@ -591,4 +592,4 @@

 -- indices for history cleanup: https://jira.operaton.com/browse/CAM-11616
 create index ACT_IDX_AUTH_ROOT_PI on ACT_RU_AUTHORIZATION(ROOT_PROC_INST_ID_);
-create index ACT_IDX_AUTH_RM_TIME on ACT_RU_AUTHORIZATION(REMOVAL_TIME_);
\ No newline at end of file
+create index ACT_IDX_AUTH_RM_TIME on ACT_RU_AUTHORIZATION(REMOVAL_TIME_);
Index: engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mysql.create.engine.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mysql.create.engine.sql b/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mysql.create.engine.sql
--- a/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mysql.create.engine.sql	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.mysql.create.engine.sql	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -98,6 +98,7 @@
     CACHED_ENT_STATE_ integer,
     SEQUENCE_COUNTER_ bigint,
     TENANT_ID_ varchar(64),
+    PROC_DEF_KEY_ varchar(255),
     primary key (ID_)
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_bin;

@@ -587,4 +588,4 @@

 -- indices for history cleanup: https://jira.operaton.com/browse/CAM-11616
 create index ACT_IDX_AUTH_ROOT_PI on ACT_RU_AUTHORIZATION(ROOT_PROC_INST_ID_);
-create index ACT_IDX_AUTH_RM_TIME on ACT_RU_AUTHORIZATION(REMOVAL_TIME_);
\ No newline at end of file
+create index ACT_IDX_AUTH_RM_TIME on ACT_RU_AUTHORIZATION(REMOVAL_TIME_);
Index: engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.oracle.create.engine.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.oracle.create.engine.sql b/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.oracle.create.engine.sql
--- a/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.oracle.create.engine.sql	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.oracle.create.engine.sql	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -98,6 +98,7 @@
     CACHED_ENT_STATE_ INTEGER,
     SEQUENCE_COUNTER_ NUMBER(19,0),
     TENANT_ID_ NVARCHAR2(64),
+    PROC_DEF_KEY_ NVARCHAR2(255),
     primary key (ID_)
 );

@@ -606,4 +607,4 @@

 -- indices for history cleanup: https://jira.operaton.com/browse/CAM-11616
 create index ACT_IDX_AUTH_ROOT_PI on ACT_RU_AUTHORIZATION(ROOT_PROC_INST_ID_);
-create index ACT_IDX_AUTH_RM_TIME on ACT_RU_AUTHORIZATION(REMOVAL_TIME_);
\ No newline at end of file
+create index ACT_IDX_AUTH_RM_TIME on ACT_RU_AUTHORIZATION(REMOVAL_TIME_);
Index: engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.postgres.create.engine.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.postgres.create.engine.sql b/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.postgres.create.engine.sql
--- a/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.postgres.create.engine.sql	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/db/create/activiti.postgres.create.engine.sql	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -98,6 +98,7 @@
     CACHED_ENT_STATE_ integer,
     SEQUENCE_COUNTER_ bigint,
     TENANT_ID_ varchar(64),
+    PROC_DEF_KEY_ varchar(255),
     primary key (ID_)
 );

@@ -601,4 +602,4 @@

 -- indices for history cleanup: https://jira.operaton.com/browse/CAM-11616
 create index ACT_IDX_AUTH_ROOT_PI on ACT_RU_AUTHORIZATION(ROOT_PROC_INST_ID_);
-create index ACT_IDX_AUTH_RM_TIME on ACT_RU_AUTHORIZATION(REMOVAL_TIME_);
\ No newline at end of file
+create index ACT_IDX_AUTH_RM_TIME on ACT_RU_AUTHORIZATION(REMOVAL_TIME_);
Index: engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/db2_engine_7.22_to_7.23.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/db2_engine_7.22_to_7.23.sql b/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/db2_engine_7.22_to_7.23.sql
--- a/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/db2_engine_7.22_to_7.23.sql	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/db2_engine_7.22_to_7.23.sql	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -21,3 +21,5 @@
 alter table ACT_HI_COMMENT
     add column REV_ integer not null
     default 1;
+
+alter table ACT_RU_EXECUTION add PROC_DEF_KEY_ varchar(255);
Index: engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/h2_engine_7.22_to_7.23.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/h2_engine_7.22_to_7.23.sql b/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/h2_engine_7.22_to_7.23.sql
--- a/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/h2_engine_7.22_to_7.23.sql	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/h2_engine_7.22_to_7.23.sql	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -22,3 +22,4 @@
     add column REV_ integer not null
     default 1;

+alter table ACT_RU_EXECUTION add PROC_DEF_KEY_ varchar(255);
Index: engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mariadb_engine_7.22_to_7.23.sql
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mariadb_engine_7.22_to_7.23.sql b/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mariadb_engine_7.22_to_7.23.sql
--- a/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mariadb_engine_7.22_to_7.23.sql	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mariadb_engine_7.22_to_7.23.sql	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -21,3 +21,5 @@
 alter table ACT_HI_COMMENT
     add column REV_ integer not null
     default 1;
+
+alter table ACT_RU_EXECUTION add PROC_DEF_KEY_ varchar(255);
Index: engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mssql_engine_7.22_to_7.23.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mssql_engine_7.22_to_7.23.sql b/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mssql_engine_7.22_to_7.23.sql
--- a/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mssql_engine_7.22_to_7.23.sql	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mssql_engine_7.22_to_7.23.sql	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -20,4 +20,6 @@

 alter table ACT_HI_COMMENT
     add REV_ integer
-    not null default 1;
\ No newline at end of file
+    not null default 1;
+
+alter table ACT_RU_EXECUTION add PROC_DEF_KEY_ nvarchar(255);
Index: engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mysql_engine_7.22_to_7.23.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mysql_engine_7.22_to_7.23.sql b/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mysql_engine_7.22_to_7.23.sql
--- a/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mysql_engine_7.22_to_7.23.sql	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/mysql_engine_7.22_to_7.23.sql	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -21,3 +21,5 @@
 alter table ACT_HI_COMMENT
     add column REV_ INTEGER not null
     default 1;
+
+alter table ACT_RU_EXECUTION add column PROC_DEF_KEY_ varchar(255);
Index: engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/oracle_engine_7.22_to_7.23.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/oracle_engine_7.22_to_7.23.sql b/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/oracle_engine_7.22_to_7.23.sql
--- a/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/oracle_engine_7.22_to_7.23.sql	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/oracle_engine_7.22_to_7.23.sql	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -20,3 +20,5 @@

 alter table ACT_HI_COMMENT
     add REV_ integer default 1 not null;
+
+alter table ACT_RU_EXECUTION add PROC_DEF_KEY_ NVARCHAR2(255);
Index: engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/postgres_engine_7.22_to_7.23.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/postgres_engine_7.22_to_7.23.sql b/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/postgres_engine_7.22_to_7.23.sql
--- a/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/postgres_engine_7.22_to_7.23.sql	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/db/upgrade/postgres_engine_7.22_to_7.23.sql	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -21,3 +21,5 @@
 alter table ACT_HI_COMMENT
     add column REV_ integer not null
     default 1;
+
+alter table ACT_RU_EXECUTION add column PROC_DEF_KEY_ varchar(255);
Index: engine/src/main/resources/org/operaton/bpm/engine/impl/mapping/entity/Execution.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/main/resources/org/operaton/bpm/engine/impl/mapping/entity/Execution.xml b/engine/src/main/resources/org/operaton/bpm/engine/impl/mapping/entity/Execution.xml
--- a/engine/src/main/resources/org/operaton/bpm/engine/impl/mapping/entity/Execution.xml	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/main/resources/org/operaton/bpm/engine/impl/mapping/entity/Execution.xml	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -45,6 +45,7 @@
       CACHED_ENT_STATE_,
       SEQUENCE_COUNTER_,
       TENANT_ID_,
+      PROC_DEF_KEY_,
       REV_
     )
     values
@@ -68,6 +69,7 @@
       #{cachedEntityState, jdbcType=INTEGER},
       #{sequenceCounter, jdbcType=BIGINT},
       #{tenantId, jdbcType=VARCHAR},
+      #{processDefinitionKey, jdbcType=VARCHAR},
       1
     )
   </insert>
@@ -90,7 +92,8 @@
       SUSPENSION_STATE_ = #{suspensionState, jdbcType=INTEGER},
       CACHED_ENT_STATE_ = #{cachedEntityState, jdbcType=INTEGER},
       SEQUENCE_COUNTER_ = #{sequenceCounter, jdbcType=BIGINT},
-      TENANT_ID_ = #{tenantId, jdbcType=BIGINT}
+      TENANT_ID_ = #{tenantId, jdbcType=BIGINT},
+      PROC_DEF_KEY_ = #{processDefinitionKey, jdbcType=VARCHAR}
     where ID_ = #{id, jdbcType=VARCHAR}
       and REV_ = #{revision, jdbcType=INTEGER}
   </update>
@@ -155,6 +158,7 @@
     <result property="cachedEntityState" column="CACHED_ENT_STATE_" jdbcType="INTEGER"/>
     <result property="sequenceCounter" column="SEQUENCE_COUNTER_" jdbcType="BIGINT"/>
     <result property="tenantId" column="TENANT_ID_" jdbcType="VARCHAR"/>
+    <result property="processDefinitionKey" column="PROC_DEF_KEY_" jdbcType="VARCHAR"/>
   </resultMap>

   <resultMap type="org.operaton.bpm.engine.impl.util.ImmutablePair" id="deploymentIdMapping">
Index: engine/src/test/java/org/operaton/bpm/engine/test/api/runtime/ExecutionQueryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/test/java/org/operaton/bpm/engine/test/api/runtime/ExecutionQueryTest.java b/engine/src/test/java/org/operaton/bpm/engine/test/api/runtime/ExecutionQueryTest.java
--- a/engine/src/test/java/org/operaton/bpm/engine/test/api/runtime/ExecutionQueryTest.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/test/java/org/operaton/bpm/engine/test/api/runtime/ExecutionQueryTest.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -98,6 +98,7 @@
     // Concurrent process with 3 executions for each process instance
     assertEquals(12, runtimeService.createExecutionQuery().processDefinitionKey(CONCURRENT_PROCESS_KEY).list().size());
     assertEquals(1, runtimeService.createExecutionQuery().processDefinitionKey(SEQUENTIAL_PROCESS_KEY).list().size());
+    assertNotNull(runtimeService.createExecutionQuery().processDefinitionKey(SEQUENTIAL_PROCESS_KEY).singleResult().getProcessDefinitionKey());
   }

   @Test
Index: engine/src/test/java/org/operaton/bpm/engine/test/api/runtime/ProcessInstanceQueryTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/test/java/org/operaton/bpm/engine/test/api/runtime/ProcessInstanceQueryTest.java b/engine/src/test/java/org/operaton/bpm/engine/test/api/runtime/ProcessInstanceQueryTest.java
--- a/engine/src/test/java/org/operaton/bpm/engine/test/api/runtime/ProcessInstanceQueryTest.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/test/java/org/operaton/bpm/engine/test/api/runtime/ProcessInstanceQueryTest.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -208,9 +208,11 @@
   @Test
   public void testQueryByProcessDefinitionKeySingleResult() {
     ProcessInstanceQuery query = runtimeService.createProcessInstanceQuery().processDefinitionKey(PROCESS_DEFINITION_KEY_2);
+    ProcessInstance processInstance = query.singleResult();
     assertEquals(1, query.count());
     assertEquals(1, query.list().size());
-    assertNotNull(query.singleResult());
+    assertNotNull(processInstance);
+    assertEquals(PROCESS_DEFINITION_KEY_2, processInstance.getProcessDefinitionKey());
   }

   @Test
Index: engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/conditional/ConditionalStartEventTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/conditional/ConditionalStartEventTest.java b/engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/conditional/ConditionalStartEventTest.java
--- a/engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/conditional/ConditionalStartEventTest.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/conditional/ConditionalStartEventTest.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -489,6 +489,7 @@
     List<ProcessInstance> processInstances = runtimeService.createProcessInstanceQuery().processDefinitionKey(TRUE_CONDITION_PROCESS).list();
     assertEquals(1, processInstances.size());

+    assertEquals(TRUE_CONDITION_PROCESS, processInstances.get(0).getProcessDefinitionKey());
     assertEquals(processInstances.get(0).getId(), conditionInstances.get(0).getId());
   }

Index: engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/message/MessageStartEventTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/message/MessageStartEventTest.java b/engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/message/MessageStartEventTest.java
--- a/engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/message/MessageStartEventTest.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/message/MessageStartEventTest.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -172,6 +172,7 @@
     taskService.complete(task.getId());

     testRule.assertProcessEnded(processInstance.getId());
+    assertEquals("singleMessageStartEvent", processInstance.getProcessDefinitionKey());

     // using startProcessInstanceByKey also triggers the message event, if there is a single start event

@@ -185,6 +186,7 @@
     taskService.complete(task.getId());

     testRule.assertProcessEnded(processInstance.getId());
+    assertEquals("singleMessageStartEvent", processInstance.getProcessDefinitionKey());

   }

Index: engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/timer/StartTimerEventTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/timer/StartTimerEventTest.java b/engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/timer/StartTimerEventTest.java
--- a/engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/timer/StartTimerEventTest.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/test/java/org/operaton/bpm/engine/test/bpmn/event/timer/StartTimerEventTest.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -102,6 +102,7 @@

     List<ProcessInstance> pi = runtimeService.createProcessInstanceQuery().processDefinitionKey("startTimerEventExample").list();
     assertEquals(1, pi.size());
+    assertEquals("startTimerEventExample", pi.get(0).getProcessDefinitionKey());

     assertEquals(0, jobQuery.count());

Index: engine/src/test/java/org/operaton/bpm/engine/test/standalone/entity/ExecutionEntityTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/test/java/org/operaton/bpm/engine/test/standalone/entity/ExecutionEntityTest.java b/engine/src/test/java/org/operaton/bpm/engine/test/standalone/entity/ExecutionEntityTest.java
--- a/engine/src/test/java/org/operaton/bpm/engine/test/standalone/entity/ExecutionEntityTest.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/test/java/org/operaton/bpm/engine/test/standalone/entity/ExecutionEntityTest.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -109,8 +109,8 @@
     // when
     assertNotNull(execution);
     assertEquals(pi.getId(), execution.getProcessInstanceId());
+    assertEquals("singleTaskProcess", pi.getProcessDefinitionKey());
     processEngineRule.getRuntimeService().signal(execution.getId());
-
     // then (see #TestLocalVariableTaskListener::notify)
   }

Index: engine/src/test/java/org/operaton/bpm/engine/test/util/ExecutionTree.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/engine/src/test/java/org/operaton/bpm/engine/test/util/ExecutionTree.java b/engine/src/test/java/org/operaton/bpm/engine/test/util/ExecutionTree.java
--- a/engine/src/test/java/org/operaton/bpm/engine/test/util/ExecutionTree.java	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/engine/src/test/java/org/operaton/bpm/engine/test/util/ExecutionTree.java	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -176,4 +176,9 @@
     return sb.toString();
   }

+  @Override
+  public String getProcessDefinitionKey() {
+    return wrappedExecution.getProcessDefinitionKey();
+  }
+
 }
Index: parent/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/parent/pom.xml b/parent/pom.xml
--- a/parent/pom.xml	(revision 5f95e68ae8d0e44c94362ab69f7bd37f90e1cae9)
+++ b/parent/pom.xml	(revision efdc8c800d0d49c38f27b23d24ab4ccf7368a81a)
@@ -43,7 +43,7 @@
     <version.xml.jaxb-impl4>4.0.5</version.xml.jaxb-impl4>
     <version.jakarta.xml.bind-api>4.0.2</version.jakarta.xml.bind-api>
     <version.httpclient>4.5.14</version.httpclient>
-    <version.httpclient5>5.4.1</version.httpclient5>
+    <version.httpclient5>5.3</version.httpclient5>

     <version.slf4j>1.7.26</version.slf4j>
     <version.logback>1.2.11</version.logback>
